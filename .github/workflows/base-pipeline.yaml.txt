name: Deploy aws resources with Terraform and Deploy micro-services with Kubernetes Workflow

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch

jobs:
  terraform:
    name: Run Terraform Job
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Terraform Format and Validate
      - name: Terraform Format and Validate
        run: |
          terraform fmt -check
          terraform validate

      # Terraform Plan
      - name: Terraform Plan
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        run: terraform plan

      # (Optional) Terraform Apply
      - name: Terraform Apply
        if: github.event_name == 'push'
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        run: terraform apply -auto-approve

  kubernetes:
    name: Kubernetes Job
    runs-on: ubuntu-latest
    needs: terraform # Ensure this job runs after Terraform

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Kubectl
      - name: Setup Kubectl
        uses: aws/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      # Set Kubeconfig
      - name: Set Kubeconfig
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG" > kubeconfig.yaml && export KUBECONFIG=kubeconfig.yaml

      # Apply Kubernetes Manifests
      - name: Apply Kubernetes Manifests
        run: kubectl apply -f kubernetes yaml files 

      # Verify Deployment
      - name: Verify Deployment
        run: kubectl get pods -n namespace
